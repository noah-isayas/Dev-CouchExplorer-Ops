name: Publish Docker Image!

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history so we have all tags

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get current version from Git tags
        id: get_version
        run: |
          # Get the latest tag and increment it
          latest_version=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest version: $latest_version"
          # Increment version using semantic versioning
          base_version=${latest_version#v}
          major=$(echo $base_version | cut -d. -f1)
          minor=$(echo $base_version | cut -d. -f2)
          patch=$(echo $base_version | cut -d. -f3)
          new_patch=$((patch + 1))
          new_version="v${major}.${minor}.${new_patch}"
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
          echo "New version: $new_version"

      - name: Build Docker image
        run: |
          docker build -t noha019/sqs-client-kn3:latest -t noha019/sqs-client-kn3:${{ env.NEW_VERSION }} .
        working-directory: ./java_sqs_client

      - name: Push Docker image
        run: |
          docker push noha019/sqs-client-kn3:latest
          docker push noha019/sqs-client-kn3:${{ env.NEW_VERSION }}

      - name: Create a new Git tag for the version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --tags  # Ensure we have the latest tags from the remote
          if git rev-parse -q --verify "refs/tags/${{ env.NEW_VERSION }}" > /dev/null; then
            echo "Tag ${{ env.NEW_VERSION }} already exists. Skipping tag creation."
          else
            git config --global user.email "noahhaile1@gmail.com"
            git config --global user.name "noah"
            git tag ${{ env.NEW_VERSION }}
            git push origin ${{ env.NEW_VERSION }}
          fi
